{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Empleado } from '../empleado.model';\nlet ActualizarEmpleadoComponent = class ActualizarEmpleadoComponent {\n  // le pasamos el routing e importamos el Router\n  constructor(router, miServicio, empleadosService, route // rutas\n  ) {\n    this.router = router;\n    this.miServicio = miServicio;\n    this.empleadosService = empleadosService;\n    this.route = route;\n    this.titulo = 'Modificar empleados';\n    this.empleados = []; // muestra los empleados desde el servicio\n    this.cuadroNombre = '';\n    this.cuadroApellido = '';\n    this.cuadroCargo = '';\n    this.cuadroSalario = 0;\n  }\n  ngOnInit() {\n    this.empleados = this.empleadosService.empleados; // seria lo mismo que meterlo en el constructor\n    this.indice = this.route.snapshot.params['id']; // le decimos que indice sea igual al id que le pasamos a la ruta desde el module.ts\n    let empleado = this.empleadosService.encontrarEmpleado(this.indice);\n    this.cuadroNombre = empleado.nombre;\n    this.cuadroApellido = empleado.apellido;\n    this.cuadroCargo = empleado.cargo;\n    this.cuadroSalario = empleado.salario;\n  }\n  volverHome() {\n    // accedemos el router del constructor y le pasamos navigate() y la ruta\n    this.router.navigate(['']);\n  }\n  modificarEmpleado() {\n    // creamos una función que recoge la información de los empleados. Hay que agregar miEmpleado al array de arriba\n    let miEmpleado = new Empleado(this.cuadroNombre, this.cuadroApellido, this.cuadroCargo, this.cuadroSalario);\n    this.empleadosService.actualizarEmpleado(this.indice, miEmpleado);\n    this.router.navigate(['']); // al agregar el empleado redirige al home (redireccionamiento automático).\n  }\n};\n\nActualizarEmpleadoComponent = __decorate([Component({\n  selector: 'app-actualizar-empleado',\n  templateUrl: './actualizar-empleado.component.html',\n  styleUrls: ['./actualizar-empleado.component.css']\n})], ActualizarEmpleadoComponent);\nexport { ActualizarEmpleadoComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAEjD,SAASC,QAAQ,QAAQ,mBAAmB;AASrC,IAAMC,2BAA2B,GAAjC,MAAMA,2BAA2B;EAGtC;EACAC,YACUC,MAAc,EACdC,UAAoC,EACpCC,gBAAkC,EAClCC,KAAqB,CAAC;EAAA;IAHtB,WAAM,GAANH,MAAM;IACN,eAAU,GAAVC,UAAU;IACV,qBAAgB,GAAhBC,gBAAgB;IAChB,UAAK,GAALC,KAAK;IAPf,WAAM,GAAG,qBAAqB;IAU9B,cAAS,GAAe,EAAE,CAAC,CAAC;IAiB5B,iBAAY,GAAW,EAAE;IACzB,mBAAc,GAAW,EAAE;IAC3B,gBAAW,GAAW,EAAE;IACxB,kBAAa,GAAW,CAAC;EAtBtB;EAIHC,QAAQ;IACN,IAAI,CAACC,SAAS,GAAG,IAAI,CAACH,gBAAgB,CAACG,SAAS,CAAC,CAAC;IAClD,IAAI,CAACC,MAAM,GAAG,IAAI,CAACH,KAAK,CAACI,QAAQ,CAACC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;IAChD,IAAIC,QAAQ,GAAa,IAAI,CAACP,gBAAgB,CAACQ,iBAAiB,CAAC,IAAI,CAACJ,MAAM,CAAC;IAC7E,IAAI,CAACK,YAAY,GAAGF,QAAQ,CAACG,MAAM;IACnC,IAAI,CAACC,cAAc,GAAGJ,QAAQ,CAACK,QAAQ;IACvC,IAAI,CAACC,WAAW,GAAGN,QAAQ,CAACO,KAAK;IACjC,IAAI,CAACC,aAAa,GAAGR,QAAQ,CAACS,OAAO;EACvC;EAEAC,UAAU;IACR;IACA,IAAI,CAACnB,MAAM,CAACoB,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;EAC5B;EAQAC,iBAAiB;IACf;IAEA,IAAIC,UAAU,GAAG,IAAIzB,QAAQ,CAC3B,IAAI,CAACc,YAAY,EACjB,IAAI,CAACE,cAAc,EACnB,IAAI,CAACE,WAAW,EAChB,IAAI,CAACE,aAAa,CACnB;IAED,IAAI,CAACf,gBAAgB,CAACqB,kBAAkB,CAAC,IAAI,CAACjB,MAAM,EAAEgB,UAAU,CAAC;IACjE,IAAI,CAACtB,MAAM,CAACoB,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EAC9B;CACD;;AA/CYtB,2BAA2B,eALvCF,SAAS,CAAC;EACT4B,QAAQ,EAAE,yBAAyB;EACnCC,WAAW,EAAE,sCAAsC;EACnDC,SAAS,EAAE,CAAC,qCAAqC;CAClD,CAAC,GACW5B,2BAA2B,CA+CvC;SA/CYA,2BAA2B","names":["Component","Empleado","ActualizarEmpleadoComponent","constructor","router","miServicio","empleadosService","route","ngOnInit","empleados","indice","snapshot","params","empleado","encontrarEmpleado","cuadroNombre","nombre","cuadroApellido","apellido","cuadroCargo","cargo","cuadroSalario","salario","volverHome","navigate","modificarEmpleado","miEmpleado","actualizarEmpleado","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\masterD\\ANGULAR\\app-empleados\\src\\app\\actualizar-empleado\\actualizar-empleado.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Empleado } from '../empleado.model';\nimport { EmpleadosService } from '../empleados.service';\nimport { ServicioEmpleadosService } from '../servicio-empleados.service';\n\n@Component({\n  selector: 'app-actualizar-empleado',\n  templateUrl: './actualizar-empleado.component.html',\n  styleUrls: ['./actualizar-empleado.component.css'],\n})\nexport class ActualizarEmpleadoComponent implements OnInit {\n  titulo = 'Modificar empleados';\n\n  // le pasamos el routing e importamos el Router\n  constructor(\n    private router: Router,\n    private miServicio: ServicioEmpleadosService,\n    private empleadosService: EmpleadosService,\n    private route: ActivatedRoute // rutas\n  ) {}\n\n  empleados: Empleado[] = []; // muestra los empleados desde el servicio\n\n  ngOnInit(): void {\n    this.empleados = this.empleadosService.empleados; // seria lo mismo que meterlo en el constructor\n    this.indice = this.route.snapshot.params['id']; // le decimos que indice sea igual al id que le pasamos a la ruta desde el module.ts\n    let empleado: Empleado = this.empleadosService.encontrarEmpleado(this.indice);\n    this.cuadroNombre = empleado.nombre;\n    this.cuadroApellido = empleado.apellido;\n    this.cuadroCargo = empleado.cargo;\n    this.cuadroSalario = empleado.salario;\n  }\n\n  volverHome() {\n    // accedemos el router del constructor y le pasamos navigate() y la ruta\n    this.router.navigate(['']);\n  }\n\n  cuadroNombre: string = '';\n  cuadroApellido: string = '';\n  cuadroCargo: string = '';\n  cuadroSalario: number = 0;\n  indice: number;\n\n  modificarEmpleado() {\n    // creamos una función que recoge la información de los empleados. Hay que agregar miEmpleado al array de arriba\n\n    let miEmpleado = new Empleado(\n      this.cuadroNombre,\n      this.cuadroApellido,\n      this.cuadroCargo,\n      this.cuadroSalario\n    );\n    \n    this.empleadosService.actualizarEmpleado(this.indice, miEmpleado);\n    this.router.navigate(['']); // al agregar el empleado redirige al home (redireccionamiento automático).\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}