{"ast":null,"code":"export class LoginGuardian {\n  constructor(loginService, router) {\n    this.loginService = loginService;\n    this.router = router;\n  }\n  canActivate(route, state) {\n    // throw new Error(\"Method not implemented.\");\n    if (this.loginService.estaLogueado()) {\n      return true;\n    } else {\n      this.router.navigate(['login']);\n      return false;\n    }\n  }\n}","map":{"version":3,"mappings":"AAIA,OAAM,MAAOA,aAAa;EAEtBC,YAAoBC,YAAyB,EAAUC,MAAa;IAAhD,iBAAY,GAAZD,YAAY;IAAuB,WAAM,GAANC,MAAM;EAAU;EAEvEC,WAAW,CAACC,KAA6B,EAAEC,KAA0B;IACjE;IAGA,IAAI,IAAI,CAACJ,YAAY,CAACK,YAAY,EAAE,EAAE;MAElC,OAAO,IAAI;KACd,MAAM;MACH,IAAI,CAACJ,MAAM,CAACK,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;MAC/B,OAAO,KAAK;;EAEpB","names":["LoginGuardian","constructor","loginService","router","canActivate","route","state","estaLogueado","navigate"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\masterD\\ANGULAR\\app-empleados\\src\\app\\login\\login-guardian.ts"],"sourcesContent":["import { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from \"@angular/router\";\r\nimport { Observable } from \"rxjs\";\r\nimport { LoginService } from \"./login.service\";\r\n\r\nexport class LoginGuardian implements CanActivate{\r\n\r\n    constructor(private loginService:LoginService, private router:Router) {}\r\n\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) /*: boolean | UrlTree | Observable<boolean | UrlTree> | Promise<boolean | UrlTree>*/ {\r\n        // throw new Error(\"Method not implemented.\");\r\n\r\n\r\n        if (this.loginService.estaLogueado()) {\r\n            \r\n            return true;\r\n        } else {\r\n            this.router.navigate(['login'])\r\n            return false;\r\n        }\r\n    }\r\n\r\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}