{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class DataServices {\n  // injectamos el HttpClientModule desde el constructor\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n  }\n  // recibe como parámetro el array tipo Empleado creado en empleados.services\n  guardarEmpleados(empleados) {\n    // utilizamos el objeto injectado. si reemplazamos el post por put, sobreescribe los datos que ya están registrados anteriormente, \n    this.httpClient.post('https://mis-clientes-6a9cd-default-rtdb.europe-west1.firebasedatabase.app/datos.json', empleados).subscribe(\n    // url base de datos (añadimos datos.json) y especifamos el array\n    // url base de datos (añadimos datos.json) y especifamos el array\n    response => console.log('Se han guardado los empleados: ' + response), error => console.log('Error: ' + error));\n  }\n}\nDataServices.ɵfac = function DataServices_Factory(t) {\n  return new (t || DataServices)(i0.ɵɵinject(i1.HttpClient));\n};\nDataServices.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: DataServices,\n  factory: DataServices.ɵfac\n});","map":{"version":3,"mappings":";;AAKA,OAAM,MAAOA,YAAY;EAErB;EAEAC,YAAoBC,UAAqB;IAArB,eAAU,GAAVA,UAAU;EAAc;EAE5C;EACAC,gBAAgB,CAACC,SAAoB;IACjC;IACA,IAAI,CAACF,UAAU,CAACG,IAAI,CAAC,sFAAsF,EAAED,SAAS,CAAC,CAACE,SAAS;IAAE;IAC/H;IAAAC,QAAQ,IAAEC,OAAO,CAACC,GAAG,CAAC,iCAAiC,GAAGF,QAAQ,CAAC,EACnEG,KAAK,IAAEF,OAAO,CAACC,GAAG,CAAC,SAAS,GAAGC,KAAK,CAAC,CACxC;EACL;;AAbSV,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;SAAZA,YAAY;EAAAW,SAAZX,YAAY;AAAA","names":["DataServices","constructor","httpClient","guardarEmpleados","empleados","post","subscribe","response","console","log","error","factory"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\masterD\\ANGULAR\\app-empleados\\src\\app\\data.services.ts"],"sourcesContent":["import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Empleado } from \"./empleado.model\";\r\n\r\n@Injectable()\r\nexport class DataServices{\r\n\r\n    // injectamos el HttpClientModule desde el constructor\r\n\r\n    constructor(private httpClient:HttpClient) {}\r\n\r\n    // recibe como parámetro el array tipo Empleado creado en empleados.services\r\n    guardarEmpleados(empleados:Empleado[]) {\r\n        // utilizamos el objeto injectado. si reemplazamos el post por put, sobreescribe los datos que ya están registrados anteriormente, \r\n        this.httpClient.post('https://mis-clientes-6a9cd-default-rtdb.europe-west1.firebasedatabase.app/datos.json', empleados).subscribe( // url base de datos (añadimos datos.json) y especifamos el array\r\n            response=>console.log('Se han guardado los empleados: ' + response),\r\n            error=>console.log('Error: ' + error)   \r\n        );\r\n    } \r\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}