{"ast":null,"code":"import firebase from 'firebase/compat/app';\nimport 'firebase/compat/auth'; // importamos el auth de firebase\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"ngx-cookie-service/public-api\";\nexport class LoginService {\n  // para el redireccionamiento\n  constructor(router, cookies) {\n    this.router = router;\n    this.cookies = cookies;\n  }\n  // autenticar usuario\n  login(email, password) {\n    firebase.auth().signInWithEmailAndPassword(email, password).then(\n    // le indicamos que vamos a entrar mediante email y contraseña\n    // le indicamos que vamos a entrar mediante email y contraseña\n    response => {\n      firebase.auth().currentUser?.getIdToken().then(\n      // recoge el token del usuario que está realizando el login\n      // recoge el token del usuario que está realizando el login\n      token => {\n        this.token = token;\n        this.cookies.set('token', this.token);\n        this.router.navigate(['/']);\n      });\n    });\n  }\n  getIdToken() {\n    // return this.token;\n    return this.cookies.get('token');\n  }\n  estaLogueado() {\n    // return this.token;\n    return this.cookies.get('token');\n  }\n  logout() {\n    firebase.auth().signOut().then(() => {\n      this.token = '';\n      this.cookies.set('token', this.token);\n      this.router.navigate(['/']);\n    });\n  }\n}\nLoginService.ɵfac = function LoginService_Factory(t) {\n  return new (t || LoginService)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i2.CookieService));\n};\nLoginService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: LoginService,\n  factory: LoginService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAGA,OAAOA,QAAQ,MAAM,qBAAqB;AAC1C,OAAO,sBAAsB,CAAC,CAAC;;;;AAM/B,OAAM,MAAOC,YAAY;EAEvB;EACAC,YAAoBC,MAAa,EAAUC,OAAqB;IAA5C,WAAM,GAAND,MAAM;IAAiB,YAAO,GAAPC,OAAO;EAAkB;EAKpE;EACAC,KAAK,CAACC,KAAY,EAAEC,QAAe;IAEjCP,QAAQ,CAACQ,IAAI,EAAE,CAACC,0BAA0B,CAACH,KAAK,EAAEC,QAAQ,CAAC,CAACG,IAAI;IAAE;IAChE;IAAAC,QAAQ,IAAE;MACRX,QAAQ,CAACQ,IAAI,EAAE,CAACI,WAAW,EAAEC,UAAU,EAAE,CAACH,IAAI;MAAE;MAC9C;MAAAI,KAAK,IAAE;QACL,IAAI,CAACA,KAAK,GAAGA,KAAK;QAClB,IAAI,CAACV,OAAO,CAACW,GAAG,CAAC,OAAO,EAAE,IAAI,CAACD,KAAK,CAAC;QACrC,IAAI,CAACX,MAAM,CAACa,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;MAC7B,CAAC,CACF;IACH,CAAC,CACF;EACH;EAEAH,UAAU;IAER;IACA,OAAO,IAAI,CAACT,OAAO,CAACa,GAAG,CAAC,OAAO,CAAC;EAClC;EAEAC,YAAY;IAEV;IACA,OAAO,IAAI,CAACd,OAAO,CAACa,GAAG,CAAC,OAAO,CAAC;EAClC;EAEAE,MAAM;IAEJnB,QAAQ,CAACQ,IAAI,EAAE,CAACY,OAAO,EAAE,CAACV,IAAI,CAAC,MAAI;MACjC,IAAI,CAACI,KAAK,GAAG,EAAE;MACf,IAAI,CAACV,OAAO,CAACW,GAAG,CAAC,OAAO,EAAE,IAAI,CAACD,KAAK,CAAC;MACrC,IAAI,CAACX,MAAM,CAACa,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;IAC7B,CAAC,CAAC;EACJ;;AA3CWf,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;SAAZA,YAAY;EAAAoB,SAAZpB,YAAY;EAAAqB,YAFX;AAAM","names":["firebase","LoginService","constructor","router","cookies","login","email","password","auth","signInWithEmailAndPassword","then","response","currentUser","getIdToken","token","set","navigate","get","estaLogueado","logout","signOut","factory","providedIn"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\masterD\\ANGULAR\\app-empleados\\src\\app\\login\\login.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport firebase from 'firebase/compat/app';\nimport 'firebase/compat/auth'; // importamos el auth de firebase\nimport { CookieService } from 'ngx-cookie-service/public-api';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n\n  // para el redireccionamiento\n  constructor(private router:Router, private cookies:CookieService) { }\n\n  // 'firma/codigo seguridad\n  token:string;\n\n  // autenticar usuario\n  login(email:string, password:string) {\n\n    firebase.auth().signInWithEmailAndPassword(email, password).then( // le indicamos que vamos a entrar mediante email y contraseña\n      response=>{\n        firebase.auth().currentUser?.getIdToken().then( // recoge el token del usuario que está realizando el login\n          token=>{\n            this.token = token;\n            this.cookies.set('token', this.token);\n            this.router.navigate(['/']);\n          }\n        )\n      }\n    );\n  }\n\n  getIdToken() {\n    \n    // return this.token;\n    return this.cookies.get('token');\n  }\n\n  estaLogueado() {\n\n    // return this.token;\n    return this.cookies.get('token');\n  }\n\n  logout() {\n\n    firebase.auth().signOut().then(()=>{\n      this.token = '';\n      this.cookies.set('token', this.token);\n      this.router.navigate(['/']);\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}