{"ast":null,"code":"import { Empleado } from '../empleado.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../servicio-empleados.service\";\nimport * as i3 from \"../empleados.service\";\nexport class ProyectosComponent {\n  // le pasamos el routing e importamos el Router\n  constructor(router, miServicio, empleadosService) {\n    this.router = router;\n    this.miServicio = miServicio;\n    this.empleadosService = empleadosService;\n    this.titulo = 'Listado y agregado de empleados';\n    this.empleados = []; // muestra los empleados desde el servicio\n    this.cuadroNombre = '';\n    this.cuadroApellido = '';\n    this.cuadroCargo = '';\n    this.cuadroSalario = 0;\n  }\n  ngOnInit() {\n    this.empleados = this.empleadosService.empleados; // seria lo mismo que meterlo en el constructor\n  }\n\n  volverHome() {\n    // accedemos el router del constructor y le pasamos navigate() y la ruta\n    this.router.navigate(['']);\n  }\n  agregarEmpleado() {\n    let miEmpleado = new Empleado(this.cuadroNombre, this.cuadroApellido, this.cuadroCargo, this.cuadroSalario);\n    this.miServicio.muestraMensaje(\"Nombre del empleado: \" + miEmpleado.nombre); // llamo al constructor, le pasamos la función del servicio\n    this.empleados.push(miEmpleado); // añade a empleados lo que hay en miEmpleado\n    this.empleadosService.agregarEmpleadoServicio(miEmpleado);\n    this.router.navigate(['']); // al agregar el empleado redirige al home (redireccionamiento automático).\n  }\n}\n\nProyectosComponent.ɵfac = function ProyectosComponent_Factory(t) {\n  return new (t || ProyectosComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.ServicioEmpleadosService), i0.ɵɵdirectiveInject(i3.EmpleadosService));\n};\nProyectosComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ProyectosComponent,\n  selectors: [[\"app-proyectos\"]],\n  decls: 2,\n  vars: 0,\n  template: function ProyectosComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"proyectos works!\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAEA,SAASA,QAAQ,QAAQ,mBAAmB;;;;;AAS5C,OAAM,MAAOC,kBAAkB;EAG7B;EACAC,YAAoBC,MAAa,EAAUC,UAAmC,EAAUC,gBAAiC;IAArG,WAAM,GAANF,MAAM;IAAiB,eAAU,GAAVC,UAAU;IAAmC,qBAAgB,GAAhBC,gBAAgB;IAHxG,WAAM,GAAG,iCAAiC;IAO1C,cAAS,GAAY,EAAE,CAAC,CAAC;IAYzB,iBAAY,GAAU,EAAE;IACxB,mBAAc,GAAU,EAAE;IAC1B,gBAAW,GAAU,EAAE;IACvB,kBAAa,GAAU,CAAC;EAjBxB;EAIAC,QAAQ;IAEN,IAAI,CAACC,SAAS,GAAG,IAAI,CAACF,gBAAgB,CAACE,SAAS,CAAC,CAAC;EACpD;;EAEAC,UAAU;IACR;IACA,IAAI,CAACL,MAAM,CAACM,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;EAC5B;EAOAC,eAAe;IAEb,IAAIC,UAAU,GAAG,IAAIX,QAAQ,CAAC,IAAI,CAACY,YAAY,EAAE,IAAI,CAACC,cAAc,EAAE,IAAI,CAACC,WAAW,EAAE,IAAI,CAACC,aAAa,CAAC;IAC3G,IAAI,CAACX,UAAU,CAACY,cAAc,CAAC,uBAAuB,GAAGL,UAAU,CAACM,MAAM,CAAC,CAAC,CAAC;IAC7E,IAAI,CAACV,SAAS,CAACW,IAAI,CAACP,UAAU,CAAC,CAAC,CAAC;IACjC,IAAI,CAACN,gBAAgB,CAACc,uBAAuB,CAACR,UAAU,CAAC;IACzD,IAAI,CAACR,MAAM,CAACM,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EAC9B;;;AAhCWR,kBAAkB;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB;QAAlBA,kBAAkB;EAAAmB;EAAAC;EAAAC;EAAAC;IAAA;MCX/BC,yBAAG;MAAAA,gCAAgB;MAAAA,iBAAI","names":["Empleado","ProyectosComponent","constructor","router","miServicio","empleadosService","ngOnInit","empleados","volverHome","navigate","agregarEmpleado","miEmpleado","cuadroNombre","cuadroApellido","cuadroCargo","cuadroSalario","muestraMensaje","nombre","push","agregarEmpleadoServicio","selectors","decls","vars","template","i0"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\masterD\\ANGULAR\\app-empleados\\src\\app\\proyectos\\proyectos.component.ts","C:\\xampp\\htdocs\\masterD\\ANGULAR\\app-empleados\\src\\app\\proyectos\\proyectos.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Empleado } from '../empleado.model';\nimport { EmpleadosService } from '../empleados.service';\nimport { ServicioEmpleadosService } from '../servicio-empleados.service';\n\n@Component({\n  selector: 'app-proyectos',\n  templateUrl: './proyectos.component.html',\n  styleUrls: ['./proyectos.component.css']\n})\nexport class ProyectosComponent implements OnInit{\n  titulo = 'Listado y agregado de empleados'\n\n  // le pasamos el routing e importamos el Router\n  constructor(private router:Router, private miServicio:ServicioEmpleadosService, private empleadosService:EmpleadosService) {\n\n  }\n\n  empleados:Empleado[]=[]; // muestra los empleados desde el servicio\n\n  ngOnInit(): void {\n    \n    this.empleados = this.empleadosService.empleados; // seria lo mismo que meterlo en el constructor\n  }\n\n  volverHome() {\n    // accedemos el router del constructor y le pasamos navigate() y la ruta\n    this.router.navigate(['']);\n  }\n\n  cuadroNombre:string = '';\n  cuadroApellido:string = '';\n  cuadroCargo:string = '';\n  cuadroSalario:number = 0;\n\n  agregarEmpleado() { // creamos una función que recoge la información de los empleados. Hay que agregar miEmpleado al array de arriba\n\n    let miEmpleado = new Empleado(this.cuadroNombre, this.cuadroApellido, this.cuadroCargo, this.cuadroSalario);\n    this.miServicio.muestraMensaje(\"Nombre del empleado: \" + miEmpleado.nombre); // llamo al constructor, le pasamos la función del servicio\n    this.empleados.push(miEmpleado); // añade a empleados lo que hay en miEmpleado\n    this.empleadosService.agregarEmpleadoServicio(miEmpleado);\n    this.router.navigate(['']); // al agregar el empleado redirige al home (redireccionamiento automático).\n  }\n}\n","<p>proyectos works!</p>\n\n\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}