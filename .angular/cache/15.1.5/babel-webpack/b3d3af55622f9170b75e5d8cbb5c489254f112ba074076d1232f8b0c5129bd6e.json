{"ast":null,"code":"import { Empleado } from './empleado.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./servicio-empleados.service\";\nimport * as i2 from \"./data.services\";\nexport class EmpleadosService {\n  // servicio dentro de un servicio\n  constructor(servicioVentanaEmergente, dataService) {\n    this.servicioVentanaEmergente = servicioVentanaEmergente;\n    this.dataService = dataService;\n    this.empleados = [\n    // class Empleado empleado.model.ts\n    new Empleado('Juan', 'Díaz', 'Presidente', 5000), new Empleado('Ana', 'Martón', 'Directora', 3500), new Empleado('Laura', 'López', 'Jefa sección', 2800)];\n  }\n  agregarEmpleadoServicio(empleado) {\n    this.servicioVentanaEmergente.muestraMensaje('Agregando persona: \\n' + empleado.nombre + '\\n' + empleado.salario);\n    this.empleados.push(empleado);\n    this.dataService.guardarEmpleados(this.empleados);\n  }\n  // le pasamos el mismo parámetro\n  encontrarEmpleado(indice) {\n    // igual al array de empleados y su posición (índice)\n    let empleado = this.empleados[indice];\n    return empleado;\n  }\n  actualizarEmpleado(indice, empleado) {\n    let empleadoModificado = this.empleados[indice]; // almacenamos la información del empleado\n    empleadoModificado.nombre = empleado.nombre;\n    empleadoModificado.apellido = empleado.apellido;\n    empleadoModificado.cargo = empleado.cargo;\n    empleadoModificado.salario = empleado.salario;\n  }\n  // método splice() agregar y eliminar elementos en js\n  eliminarEmpleado(indice) {\n    this.empleados.splice(indice, 1);\n  }\n}\nEmpleadosService.ɵfac = function EmpleadosService_Factory(t) {\n  return new (t || EmpleadosService)(i0.ɵɵinject(i1.ServicioEmpleadosService), i0.ɵɵinject(i2.DataServices));\n};\nEmpleadosService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: EmpleadosService,\n  factory: EmpleadosService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAEA,SAASA,QAAQ,QAAQ,kBAAkB;;;;AAM3C,OAAM,MAAOC,gBAAgB;EAS3B;EACAC,YAAoBC,wBAAkD,EAAUC,WAAwB;IAApF,6BAAwB,GAAxBD,wBAAwB;IAAoC,gBAAW,GAAXC,WAAW;IAT3F,cAAS,GAAe;IACtB;IAEA,IAAIJ,QAAQ,CAAC,MAAM,EAAE,MAAM,EAAE,YAAY,EAAE,IAAI,CAAC,EAChD,IAAIA,QAAQ,CAAC,KAAK,EAAE,QAAQ,EAAE,WAAW,EAAE,IAAI,CAAC,EAChD,IAAIA,QAAQ,CAAC,OAAO,EAAE,OAAO,EAAE,cAAc,EAAE,IAAI,CAAC,CACrD;EAG0G;EAE3GK,uBAAuB,CAACC,QAAkB;IACxC,IAAI,CAACH,wBAAwB,CAACI,cAAc,CAC1C,uBAAuB,GAAGD,QAAQ,CAACE,MAAM,GAAG,IAAI,GAAGF,QAAQ,CAACG,OAAO,CACpE;IACD,IAAI,CAACC,SAAS,CAACC,IAAI,CAACL,QAAQ,CAAC;IAC7B,IAAI,CAACF,WAAW,CAACQ,gBAAgB,CAAC,IAAI,CAACF,SAAS,CAAC;EAEnD;EAEA;EACAG,iBAAiB,CAACC,MAAc;IAC9B;IACA,IAAIR,QAAQ,GAAa,IAAI,CAACI,SAAS,CAACI,MAAM,CAAC;IAC/C,OAAOR,QAAQ;EACjB;EAEAS,kBAAkB,CAACD,MAAc,EAAER,QAAkB;IACnD,IAAIU,kBAAkB,GAAG,IAAI,CAACN,SAAS,CAACI,MAAM,CAAC,CAAC,CAAC;IACjDE,kBAAkB,CAACR,MAAM,GAAGF,QAAQ,CAACE,MAAM;IAC3CQ,kBAAkB,CAACC,QAAQ,GAAGX,QAAQ,CAACW,QAAQ;IAC/CD,kBAAkB,CAACE,KAAK,GAAGZ,QAAQ,CAACY,KAAK;IACzCF,kBAAkB,CAACP,OAAO,GAAGH,QAAQ,CAACG,OAAO;EAC/C;EAEA;EACAU,gBAAgB,CAACL,MAAc;IAC7B,IAAI,CAACJ,SAAS,CAACU,MAAM,CAACN,MAAM,EAAE,CAAC,CAAC;EAClC;;AAvCWb,gBAAgB;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB;SAAhBA,gBAAgB;EAAAoB,SAAhBpB,gBAAgB;EAAAqB,YAFf;AAAM","names":["Empleado","EmpleadosService","constructor","servicioVentanaEmergente","dataService","agregarEmpleadoServicio","empleado","muestraMensaje","nombre","salario","empleados","push","guardarEmpleados","encontrarEmpleado","indice","actualizarEmpleado","empleadoModificado","apellido","cargo","eliminarEmpleado","splice","factory","providedIn"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\masterD\\ANGULAR\\app-empleados\\src\\app\\empleados.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { DataServices } from './data.services';\nimport { Empleado } from './empleado.model';\nimport { ServicioEmpleadosService } from './servicio-empleados.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class EmpleadosService {\n  empleados: Empleado[] = [\n    // class Empleado empleado.model.ts\n\n    new Empleado('Juan', 'Díaz', 'Presidente', 5000),\n    new Empleado('Ana', 'Martón', 'Directora', 3500),\n    new Empleado('Laura', 'López', 'Jefa sección', 2800),\n  ];\n\n  // servicio dentro de un servicio\n  constructor(private servicioVentanaEmergente: ServicioEmpleadosService, private dataService:DataServices) {}\n\n  agregarEmpleadoServicio(empleado: Empleado) {\n    this.servicioVentanaEmergente.muestraMensaje(\n      'Agregando persona: \\n' + empleado.nombre + '\\n' + empleado.salario\n    );\n    this.empleados.push(empleado);\n    this.dataService.guardarEmpleados(this.empleados);\n\n  }\n\n  // le pasamos el mismo parámetro\n  encontrarEmpleado(indice: number) {\n    // igual al array de empleados y su posición (índice)\n    let empleado: Empleado = this.empleados[indice];\n    return empleado;\n  }\n\n  actualizarEmpleado(indice: number, empleado: Empleado) {\n    let empleadoModificado = this.empleados[indice]; // almacenamos la información del empleado\n    empleadoModificado.nombre = empleado.nombre;\n    empleadoModificado.apellido = empleado.apellido;\n    empleadoModificado.cargo = empleado.cargo;\n    empleadoModificado.salario = empleado.salario;\n  }\n  \n  // método splice() agregar y eliminar elementos en js\n  eliminarEmpleado(indice: number) {\n    this.empleados.splice(indice, 1);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}