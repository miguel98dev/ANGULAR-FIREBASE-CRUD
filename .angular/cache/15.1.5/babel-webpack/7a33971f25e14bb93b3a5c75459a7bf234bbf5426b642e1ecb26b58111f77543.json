{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class DataServices {\n  // injectamos el HttpClientModule desde el constructor\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n  }\n  cargarEmpleados() {\n    return this.httpClient.get('https://mis-clientes-6a9cd-default-rtdb.europe-west1.firebasedatabase.app/datos.json');\n  }\n  // recibe como parámetro el array tipo Empleado creado en empleados.services\n  guardarEmpleados(empleados) {\n    // utilizamos el objeto injectado. si reemplazamos el post por put, sobreescribe los datos que ya están registrados anteriormente, evitando duplicados\n    this.httpClient.put('https://mis-clientes-6a9cd-default-rtdb.europe-west1.firebasedatabase.app/datos.json', empleados).subscribe({\n      next: response => {\n        console.log('Se han guardado los empleados: ' + response);\n      },\n      error: error => {\n        console.log('Error: ' + error);\n      }\n    });\n  }\n  // recibe como parámetros el índice del empleado y el objeto de tipo Empleado\n  actualizarEmpleado(indice, empleado) {\n    let url = 'https://mis-clientes-6a9cd-default-rtdb.europe-west1.firebasedatabase.app/datos/' + indice + '.json';\n    this.httpClient.put(url, empleado).subscribe({\n      next: response => {\n        console.log('Se ha modificado correctamente el empleado: ' + response);\n      },\n      error: error => {\n        console.log('Error: ' + error);\n      }\n    });\n  }\n  eliminarEmpleado(indice) {\n    let url = 'https://mis-clientes-6a9cd-default-rtdb.europe-west1.firebasedatabase.app/datos/' + indice + '.json';\n    this.httpClient.delete(url).subscribe({\n      next: response => {\n        console.log('Se ha modificado correctamente el empleado: ' + response);\n      },\n      error: error => {\n        console.log('Error: ' + error);\n      }\n    });\n  }\n}\nDataServices.ɵfac = function DataServices_Factory(t) {\n  return new (t || DataServices)(i0.ɵɵinject(i1.HttpClient));\n};\nDataServices.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: DataServices,\n  factory: DataServices.ɵfac\n});","map":{"version":3,"mappings":";;AAKA,OAAM,MAAOA,YAAY;EAErB;EAEAC,YAAoBC,UAAqB;IAArB,eAAU,GAAVA,UAAU;EAAc;EAG5CC,eAAe;IACZ,OAAO,IAAI,CAACD,UAAU,CAACE,GAAG,CAAC,sFAAsF,CAAC;EACrH;EAEA;EACAC,gBAAgB,CAACC,SAAoB;IACjC;IACA,IAAI,CAACJ,UAAU,CAACK,GAAG,CAAC,sFAAsF,EAAED,SAAS,CAAC,CAACE,SAAS,CAAC;MAC7HC,IAAI,EAAEC,QAAQ,IAAE;QAACC,OAAO,CAACC,GAAG,CAAC,iCAAiC,GAAGF,QAAQ,CAAC;MAAC,CAAC;MAC5EG,KAAK,EAAEA,KAAK,IAAE;QAACF,OAAO,CAACC,GAAG,CAAC,SAAS,GAAGC,KAAK,CAAC;MAAA;KAChD,CAAC;EACN;EAEA;EACAC,kBAAkB,CAACC,MAAa,EAAEC,QAAiB;IAC/C,IAAIC,GAAG,GAAG,kFAAkF,GAAGF,MAAM,GAAG,OAAO;IAE/G,IAAI,CAACb,UAAU,CAACK,GAAG,CAACU,GAAG,EAAED,QAAQ,CAAC,CAACR,SAAS,CAAC;MACzCC,IAAI,EAAEC,QAAQ,IAAE;QAACC,OAAO,CAACC,GAAG,CAAC,8CAA8C,GAAGF,QAAQ,CAAC;MAAC,CAAC;MACzFG,KAAK,EAAEA,KAAK,IAAE;QAACF,OAAO,CAACC,GAAG,CAAC,SAAS,GAAGC,KAAK,CAAC;MAAA;KAChD,CAAC;EACN;EAEAK,gBAAgB,CAACH,MAAa;IAC1B,IAAIE,GAAG,GAAG,kFAAkF,GAAGF,MAAM,GAAG,OAAO;IAE/G,IAAI,CAACb,UAAU,CAACiB,MAAM,CAACF,GAAG,CAAC,CAACT,SAAS,CAAC;MAClCC,IAAI,EAAEC,QAAQ,IAAE;QAACC,OAAO,CAACC,GAAG,CAAC,8CAA8C,GAAGF,QAAQ,CAAC;MAAC,CAAC;MACzFG,KAAK,EAAEA,KAAK,IAAE;QAACF,OAAO,CAACC,GAAG,CAAC,SAAS,GAAGC,KAAK,CAAC;MAAA;KAChD,CAAC;EACN;;AArCSb,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;SAAZA,YAAY;EAAAoB,SAAZpB,YAAY;AAAA","names":["DataServices","constructor","httpClient","cargarEmpleados","get","guardarEmpleados","empleados","put","subscribe","next","response","console","log","error","actualizarEmpleado","indice","empleado","url","eliminarEmpleado","delete","factory"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\masterD\\ANGULAR\\app-empleados\\src\\app\\data.services.ts"],"sourcesContent":["import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Empleado } from \"./empleado.model\";\r\n\r\n@Injectable()\r\nexport class DataServices{\r\n\r\n    // injectamos el HttpClientModule desde el constructor\r\n\r\n    constructor(private httpClient:HttpClient) {}\r\n\r\n\r\n    cargarEmpleados() {\r\n       return this.httpClient.get('https://mis-clientes-6a9cd-default-rtdb.europe-west1.firebasedatabase.app/datos.json');\r\n    }\r\n\r\n    // recibe como parámetro el array tipo Empleado creado en empleados.services\r\n    guardarEmpleados(empleados:Empleado[]) {\r\n        // utilizamos el objeto injectado. si reemplazamos el post por put, sobreescribe los datos que ya están registrados anteriormente, evitando duplicados\r\n        this.httpClient.put('https://mis-clientes-6a9cd-default-rtdb.europe-west1.firebasedatabase.app/datos.json', empleados).subscribe({ // url base de datos (añadimos datos.json) y especifamos el array\r\n            next: response=>{console.log('Se han guardado los empleados: ' + response);},\r\n            error: error=>{console.log('Error: ' + error)}\r\n        });\r\n    }\r\n    \r\n    // recibe como parámetros el índice del empleado y el objeto de tipo Empleado\r\n    actualizarEmpleado(indice:number, empleado:Empleado) {\r\n        let url = 'https://mis-clientes-6a9cd-default-rtdb.europe-west1.firebasedatabase.app/datos/' + indice + '.json';\r\n\r\n        this.httpClient.put(url, empleado).subscribe({ // url base de datos (añadimos datos.json) y especifamos el array\r\n            next: response=>{console.log('Se ha modificado correctamente el empleado: ' + response);},\r\n            error: error=>{console.log('Error: ' + error)}\r\n        });\r\n    }\r\n\r\n    eliminarEmpleado(indice:number) {\r\n        let url = 'https://mis-clientes-6a9cd-default-rtdb.europe-west1.firebasedatabase.app/datos/' + indice + '.json';\r\n\r\n        this.httpClient.delete(url).subscribe({ // url base de datos (añadimos datos.json) y especifamos el array\r\n            next: response=>{console.log('Se ha modificado correctamente el empleado: ' + response);},\r\n            error: error=>{console.log('Error: ' + error)}\r\n        });\r\n    }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}