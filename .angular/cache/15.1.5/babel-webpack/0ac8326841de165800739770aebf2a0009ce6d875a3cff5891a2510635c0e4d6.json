{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./login/login.service\";\nexport class DataServices {\n  // injectamos el HttpClientModule desde el constructor y el loginService\n  constructor(httpClient, loginService) {\n    this.httpClient = httpClient;\n    this.loginService = loginService;\n  }\n  cargarEmpleados() {\n    const token = this.loginService.getIdToken();\n    // ?auth= + token -> sirve para\n    return this.httpClient.get('https://mis-clientes-6a9cd-default-rtdb.europe-west1.firebasedatabase.app/datos.json?auth=' + token);\n  }\n  // recibe como parámetro el array tipo Empleado creado en empleados.services\n  guardarEmpleados(empleados) {\n    // utilizamos el objeto injectado. si reemplazamos el post por put, sobreescribe los datos que ya están registrados anteriormente, evitando duplicados\n    const token = this.loginService.getIdToken();\n    this.httpClient.put('https://mis-clientes-6a9cd-default-rtdb.europe-west1.firebasedatabase.app/datos.json?auth=' + token, empleados).subscribe({\n      next: response => {\n        console.log('Se han guardado los empleados: ' + response);\n      },\n      error: error => {\n        console.log('Error: ' + error);\n      }\n    });\n  }\n  // recibe como parámetros el índice del empleado y el objeto de tipo Empleado\n  actualizarEmpleado(indice, empleado) {\n    const token = this.loginService.getIdToken();\n    let url = 'https://mis-clientes-6a9cd-default-rtdb.europe-west1.firebasedatabase.app/datos/' + indice + '.json?auth=' + token;\n    this.httpClient.put(url, empleado).subscribe({\n      next: response => {\n        console.log('Se ha modificado correctamente el empleado: ' + response);\n      },\n      error: error => {\n        console.log('Error: ' + error);\n      }\n    });\n  }\n  eliminarEmpleado(indice) {\n    const token = this.loginService.getIdToken();\n    let url = 'https://mis-clientes-6a9cd-default-rtdb.europe-west1.firebasedatabase.app/datos/' + indice + '.json?auth=' + token;\n    this.httpClient.delete(url).subscribe({\n      next: response => {\n        console.log('Se ha eliminado correctamente el empleado: ' + response);\n      },\n      error: error => {\n        console.log('Error: ' + error);\n      }\n    });\n  }\n}\nDataServices.ɵfac = function DataServices_Factory(t) {\n  return new (t || DataServices)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.LoginService));\n};\nDataServices.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: DataServices,\n  factory: DataServices.ɵfac\n});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}